{"version":3,"sources":["headroom.js","navbar.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/*!\n * headroom.js v0.7.0 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2014 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n\n(function(window, document) {\n\n  'use strict';\n\n  /* exported features */\n  \n  var features = {\n    bind : !!(function(){}.bind),\n    classList : 'classList' in document.documentElement,\n    rAF : !!(window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame)\n  };\n  window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n  \n  /**\n   * Handles debouncing of events via requestAnimationFrame\n   * @see http://www.html5rocks.com/en/tutorials/speed/animations/\n   * @param {Function} callback The callback to handle whichever event\n   */\n  function Debouncer (callback) {\n    this.callback = callback;\n    this.ticking = false;\n  }\n  Debouncer.prototype = {\n    constructor : Debouncer,\n  \n    /**\n     * dispatches the event to the supplied callback\n     * @private\n     */\n    update : function() {\n      this.callback && this.callback();\n      this.ticking = false;\n    },\n  \n    /**\n     * ensures events don't get stacked\n     * @private\n     */\n    requestTick : function() {\n      if(!this.ticking) {\n        requestAnimationFrame(this.rafCallback || (this.rafCallback = this.update.bind(this)));\n        this.ticking = true;\n      }\n    },\n  \n    /**\n     * Attach this as the event listeners\n     */\n    handleEvent : function() {\n      this.requestTick();\n    }\n  };\n  /**\n   * Check if object is part of the DOM\n   * @constructor\n   * @param {Object} obj element to check\n   */\n  function isDOMElement(obj) {\n    return obj && typeof window !== 'undefined' && (obj === window || obj.nodeType);\n  }\n  \n  /**\n   * Helper function for extending objects\n   */\n  function extend (object /*, objectN ... */) {\n    if(arguments.length <= 0) {\n      throw new Error('Missing arguments in extend function');\n    }\n  \n    var result = object || {},\n        key,\n        i;\n  \n    for (i = 1; i < arguments.length; i++) {\n      var replacement = arguments[i] || {};\n  \n      for (key in replacement) {\n        // Recurse into object except if the object is a DOM element\n        if(typeof result[key] === 'object' && ! isDOMElement(result[key])) {\n          result[key] = extend(result[key], replacement[key]);\n        }\n        else {\n          result[key] = result[key] || replacement[key];\n        }\n      }\n    }\n  \n    return result;\n  }\n  \n  /**\n   * Helper function for normalizing tolerance option to object format\n   */\n  function normalizeTolerance (t) {\n    return t === Object(t) ? t : { down : t, up : t };\n  }\n  \n  /**\n   * UI enhancement for fixed headers.\n   * Hides header when scrolling down\n   * Shows header when scrolling up\n   * @constructor\n   * @param {DOMElement} elem the header element\n   * @param {Object} options options for the widget\n   */\n  function Headroom (elem, options) {\n    options = extend(options, Headroom.options);\n  \n    this.lastKnownScrollY = 0;\n    this.elem             = elem;\n    this.debouncer        = new Debouncer(this.update.bind(this));\n    this.tolerance        = normalizeTolerance(options.tolerance);\n    this.classes          = options.classes;\n    this.offset           = options.offset;\n    this.scroller         = options.scroller;\n    this.initialised      = false;\n    this.onPin            = options.onPin;\n    this.onUnpin          = options.onUnpin;\n    this.onTop            = options.onTop;\n    this.onNotTop         = options.onNotTop;\n  }\n  Headroom.prototype = {\n    constructor : Headroom,\n  \n    /**\n     * Initialises the widget\n     */\n    init : function() {\n      if(!Headroom.cutsTheMustard) {\n        return;\n      }\n  \n      this.elem.classList.add(this.classes.initial);\n  \n      // defer event registration to handle browser \n      // potentially restoring previous scroll position\n      setTimeout(this.attachEvent.bind(this), 100);\n  \n      return this;\n    },\n  \n    /**\n     * Unattaches events and removes any classes that were added\n     */\n    destroy : function() {\n      var classes = this.classes;\n  \n      this.initialised = false;\n      this.elem.classList.remove(classes.unpinned, classes.pinned, classes.top, classes.initial);\n      this.scroller.removeEventListener('scroll', this.debouncer, false);\n    },\n  \n    /**\n     * Attaches the scroll event\n     * @private\n     */\n    attachEvent : function() {\n      if(!this.initialised){\n        this.lastKnownScrollY = this.getScrollY();\n        this.initialised = true;\n        this.scroller.addEventListener('scroll', this.debouncer, false);\n  \n        this.debouncer.handleEvent();\n      }\n    },\n    \n    /**\n     * Unpins the header if it's currently pinned\n     */\n    unpin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n      \n      if(classList.contains(classes.pinned) || !classList.contains(classes.unpinned)) {\n        classList.add(classes.unpinned);\n        classList.remove(classes.pinned);\n        this.onUnpin && this.onUnpin.call(this);\n      }\n    },\n  \n    /**\n     * Pins the header if it's currently unpinned\n     */\n    pin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n      \n      if(classList.contains(classes.unpinned)) {\n        classList.remove(classes.unpinned);\n        classList.add(classes.pinned);\n        this.onPin && this.onPin.call(this);\n      }\n    },\n  \n    /**\n     * Handles the top states\n     */\n    top : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n      \n      if(!classList.contains(classes.top)) {\n        classList.add(classes.top);\n        classList.remove(classes.notTop);\n        this.onTop && this.onTop.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notTop : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n      \n      if(!classList.contains(classes.notTop)) {\n        classList.add(classes.notTop);\n        classList.remove(classes.top);\n        this.onNotTop && this.onNotTop.call(this);\n      }\n    },\n  \n    /**\n     * Gets the Y scroll position\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY\n     * @return {Number} pixels the page has scrolled along the Y-axis\n     */\n    getScrollY : function() {\n      return (this.scroller.pageYOffset !== undefined)\n        ? this.scroller.pageYOffset\n        : (this.scroller.scrollTop !== undefined)\n          ? this.scroller.scrollTop\n          : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    },\n  \n    /**\n     * Gets the height of the viewport\n     * @see http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript\n     * @return {int} the height of the viewport in pixels\n     */\n    getViewportHeight : function () {\n      return window.innerHeight\n        || document.documentElement.clientHeight\n        || document.body.clientHeight;\n    },\n  \n    /**\n     * Gets the height of the document\n     * @see http://james.padolsey.com/javascript/get-document-height-cross-browser/\n     * @return {int} the height of the document in pixels\n     */\n    getDocumentHeight : function () {\n      var body = document.body,\n        documentElement = document.documentElement;\n    \n      return Math.max(\n        body.scrollHeight, documentElement.scrollHeight,\n        body.offsetHeight, documentElement.offsetHeight,\n        body.clientHeight, documentElement.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the DOM element\n     * @param  {Object}  elm the element to calculate the height of which\n     * @return {int}     the height of the element in pixels\n     */\n    getElementHeight : function (elm) {\n      return Math.max(\n        elm.scrollHeight,\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the scroller element\n     * @return {int} the height of the scroller element in pixels\n     */\n    getScrollerHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getDocumentHeight()\n        : this.getElementHeight(this.scroller);\n    },\n  \n    /**\n     * determines if the scroll position is outside of document boundaries\n     * @param  {int}  currentScrollY the current y scroll position\n     * @return {bool} true if out of bounds, false otherwise\n     */\n    isOutOfBounds : function (currentScrollY) {\n      var pastTop  = currentScrollY < 0,\n        pastBottom = currentScrollY + this.getViewportHeight() > this.getScrollerHeight();\n      \n      return pastTop || pastBottom;\n    },\n  \n    /**\n     * determines if the tolerance has been exceeded\n     * @param  {int} currentScrollY the current scroll y position\n     * @return {bool} true if tolerance exceeded, false otherwise\n     */\n    toleranceExceeded : function (currentScrollY, direction) {\n      return Math.abs(currentScrollY-this.lastKnownScrollY) >= this.tolerance[direction];\n    },\n  \n    /**\n     * determine if it is appropriate to unpin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should unpin, false otherwise\n     */\n    shouldUnpin : function (currentScrollY, toleranceExceeded) {\n      var scrollingDown = currentScrollY > this.lastKnownScrollY,\n        pastOffset = currentScrollY >= this.offset;\n  \n      return scrollingDown && pastOffset && toleranceExceeded;\n    },\n  \n    /**\n     * determine if it is appropriate to pin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should pin, false otherwise\n     */\n    shouldPin : function (currentScrollY, toleranceExceeded) {\n      var scrollingUp  = currentScrollY < this.lastKnownScrollY,\n        pastOffset = currentScrollY <= this.offset;\n  \n      return (scrollingUp && toleranceExceeded) || pastOffset;\n    },\n  \n    /**\n     * Handles updating the state of the widget\n     */\n    update : function() {\n      var currentScrollY  = this.getScrollY(),\n        scrollDirection = currentScrollY > this.lastKnownScrollY ? 'down' : 'up',\n        toleranceExceeded = this.toleranceExceeded(currentScrollY, scrollDirection);\n  \n      if(this.isOutOfBounds(currentScrollY)) { // Ignore bouncy scrolling in OSX\n        return;\n      }\n  \n      if (currentScrollY <= this.offset ) {\n        this.top();\n      } else {\n        this.notTop();\n      }\n  \n      if(this.shouldUnpin(currentScrollY, toleranceExceeded)) {\n        this.unpin();\n      }\n      else if(this.shouldPin(currentScrollY, toleranceExceeded)) {\n        this.pin();\n      }\n  \n      this.lastKnownScrollY = currentScrollY;\n    }\n  };\n  /**\n   * Default options\n   * @type {Object}\n   */\n  Headroom.options = {\n    tolerance : {\n      up : 0,\n      down : 0\n    },\n    offset : 0,\n    scroller: window,\n    classes : {\n      pinned : 'headroom--pinned',\n      unpinned : 'headroom--unpinned',\n      top : 'headroom--top',\n      notTop : 'headroom--not-top',\n      initial : 'headroom'\n    }\n  };\n  Headroom.cutsTheMustard = typeof features !== 'undefined' && features.rAF && features.bind && features.classList;\n\n  window.Headroom = Headroom;\n\n}(window, document));","/**\n * Navbar\n */\n\nlet navbar = document.querySelector(\"nav\");\nlet headroom = new Headroom(navbar);\nheadroom.init();\n\nclass Gem {\n    constructor(type) {\n        this.type = type;\n    }\n}"],"sourceRoot":"/source/"}